# Builds a pull request with 2 commit statuses and codeowner approval required
# https://docs.github.com/en/rest/reference/repos#create-a-commit-status
#
# Important: This is not using the GitHub Checks API (GitHub App required)
# 
#
#
 printf "Creating repo: "
./create-repo-testrepo.sh | jq -r '.name'
./add-team-to-repo.sh
 printf "Creating docs/README: "
./create-commit-readme.sh | jq -r ".content.html_url"
 printf "Creating CODEOWNERS: "
./create-commit-codeowners.sh| jq -r ".content.html_url"
 printf "Creating requirements.txt: "
./create-commit-python-pip.sh| jq -r ".content.html_url"
sleep 2.5#
 printf "Creating new branch: "
./create-branch-newbranch.sh | jq -r '.url'
 printf "Creating a commit on the new branch: "
./create-commit-on-new-branch.sh | jq -r ".content.html_url"
 printf "Creating an issue: "
./create-repo-issue.sh | jq -r '.html_url'
 printf "Creating a pull request: "
./create-pull-request.sh | jq -r '.html_url'
# set the branch protection rules for main
 printf "Setting branch protection rules on default branch: "
./set-branch-protection.sh | jq -r '.url'

 printf "Creating a release: "
./create-release.sh  | jq -r '.url'
 printf "Adding a .gitattributes file to new branch: "
./create-commit-gitattributes.sh | jq -r ".content.html_url"

 printf "Creating commit status for an optional check: "
./create-commit-status.sh pending ci-test/this-check-is-optional | jq -r '.url'
 printf "Creating commit status for an required check: "
./create-commit-status.sh pending ci-test/this-check-is-required | jq -r '.url'
 printf "Updating branch protection with required check: "
./update-branch-protection-with-required-check.sh | jq -r '.url'

# To update the checks to success run the two lines below:
# ./create-commit-status.sh success ci-test/this-check-is-required
# ./create-commit-status.sh success ci-test/this-check-is-optional
#
echo ------------------------------------------- 
echo Run this to make create the approval review by a codeowner:
echo You will need to have set the  pr_approver_token in the
echo .gh-api-examples.conf file. The value should be a PAT of
echo a user with permissions to approve the pull request.

read x
printf "Creating a review for a pull request: "
./create-a-review-for-a-pull-request.sh | jq -r '.html_url'
echo ------------------------------------------- 

echo Run these two to make the checks update their status:
read x
 printf "Updating status for optional check to success: "
 ./create-commit-status.sh success ci-test/this-check-is-optional | jq -r '.id'
read x
 printf "Updating status for required check to success: "
 ./create-commit-status.sh success ci-test/this-check-is-required | jq -r '.id'

echo ------------------------------------------- 

echo If the tiny app is configured and has appropriate permissions
echo check runs can be created with the Checks API:

 printf "Creating check-run with annotation: "
./tiny-create-check-run-with-annotation.sh | jq -r '.id'

